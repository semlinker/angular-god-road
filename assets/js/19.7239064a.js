(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{166:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("p",[t._v("本教程的开发环境及开发语言：")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://angular.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular 6.x"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/angular/angular-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular CLI"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.typescriptlang.org/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript"),n("OutboundLink")],1)])]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),n("ul",[n("li",[t._v("安装 "),n("a",{attrs:{href:"https://github.com/angular/angular-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular CLI"),n("OutboundLink")],1),t._v(" (可选)")])]),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),n("p",[t._v("Angular 中有两种表单：")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),n("p",[t._v("本文主要介绍 Template Driven Forms （模板驱动式表单）的基础知识，相关的知识点会以问答的形式进行介绍。")]),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),n("p",[t._v("接下来我们来添加最简单的 “必填” 校验。")]),t._v(" "),t._m(22),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._m(38),t._v(" "),t._m(39),t._v(" "),n("p",[n("a",{attrs:{href:"https://angular.io/docs/ts/latest/api/forms/index/NgModelGroup-directive.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ngModelGroup"),n("OutboundLink")],1),t._v(" 指令是 Angular 表单中提供的另一特殊指令，可以对表单输入内容进行分组，方便我们在语义上区分不同性质的输入。")]),t._v(" "),n("p",[t._v("比如联系人的信息包括姓名及住址，现在需对姓名和住址进行精细化信息收集，姓名可精细化成姓和名字，地址可精细化成城市、区、街等。")]),t._v(" "),t._m(40),n("p",[t._v("运行以上代码，点击提交按钮后的输出结果：")]),t._v(" "),t._m(41),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),n("p",[t._v("表单控制的状态：")]),t._v(" "),t._m(49),t._v(" "),t._m(50),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),t._m(54),t._m(55),t._v(" "),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._m(59),t._v(" "),t._m(60)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"阅读须知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阅读须知","aria-hidden":"true"}},[this._v("#")]),this._v(" 阅读须知")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础知识","aria-hidden":"true"}},[this._v("#")]),this._v(" 基础知识")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"angular-cli-基本使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#angular-cli-基本使用","aria-hidden":"true"}},[this._v("#")]),this._v(" Angular CLI 基本使用")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("$ npm install -g @angular/cli\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("创建新的项目")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("$ ng new project-name\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("启动本地服务器")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("$ cd project-name\n$ ng serve\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"angular-表单简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#angular-表单简介","aria-hidden":"true"}},[this._v("#")]),this._v(" Angular 表单简介")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Template Driven Forms - 模板驱动式表单 (类似于 AngularJS 1.x 中的表单 )")]),this._v(" "),s("li",[this._v("Reactive Forms - 响应式表单")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"template-driven-表单的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#template-driven-表单的特点","aria-hidden":"true"}},[this._v("#")]),this._v(" Template Driven 表单的特点")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("使用方便")]),t._v(" "),n("li",[t._v("适用于简单的场景")]),t._v(" "),n("li",[t._v("通过 [(ngModel)] 实现数据双向绑定")]),t._v(" "),n("li",[t._v("自动生成 Form Model (异步)")]),t._v(" "),n("li",[t._v("最小化组件类的代码")]),t._v(" "),n("li",[t._v("不易于单元测试")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"reactive-表单的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reactive-表单的特点","aria-hidden":"true"}},[this._v("#")]),this._v(" Reactive 表单的特点")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("比较灵活")]),t._v(" "),n("li",[t._v("适用于复杂的场景")]),t._v(" "),n("li",[t._v("简化了HTML模板的代码，把验证逻辑抽离到组件类中")]),t._v(" "),n("li",[t._v("手动创建 Form Model (同步)")]),t._v(" "),n("li",[t._v("方便的跟踪表单控件值的变化")]),t._v(" "),n("li",[t._v("易于动态添加表单控件")]),t._v(" "),n("li",[t._v("易于单元测试")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第一节-创建最简单的输入框"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一节-创建最简单的输入框","aria-hidden":"true"}},[this._v("#")]),this._v(" 第一节 - 创建最简单的输入框")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"如何实现双向绑定？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何实现双向绑定？","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何实现双向绑定？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 Angular 表单中，我们通过 "),s("code",[this._v("ngModel")]),this._v(" 指令来实现双向绑定。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),n("span",{attrs:{class:"token function"}},[t._v("Component")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  selector"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'app-root'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n    <input type="text" [(ngModel)]="username">\n    {{username}}\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  username "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'semlinker'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第二节-添加简单的验证功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二节-添加简单的验证功能","aria-hidden":"true"}},[this._v("#")]),this._v(" 第二节 - 添加简单的验证功能")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"如何为表单控件添加验证功能？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何为表单控件添加验证功能？","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何为表单控件添加验证功能？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("目前 Angular 支持的内建 "),s("code",[this._v("validators")]),this._v(" 如下：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("required - 设置表单控件值是非空的")]),t._v(" "),n("li",[t._v("email - 设置表单控件值的格式是 email")]),t._v(" "),n("li",[t._v("min - 设置表单控件值的最小值")]),t._v(" "),n("li",[t._v("max - 设置表单控件值的最大值")]),t._v(" "),n("li",[t._v("minlength - 设置表单控件值的最小长度")]),t._v(" "),n("li",[t._v("maxlength - 设置表单控件值的最大长度")]),t._v(" "),n("li",[t._v("pattern - 设置表单控件的值需匹配 pattern 对应的模式")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),n("span",{attrs:{class:"token function"}},[t._v("Component")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  selector"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'app-root'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n    <input \n     type="text" \n     required\n     [(ngModel)]="username">\n    {{username}}\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  username "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'semlinker'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"如何判断表单控件是否通过验证？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何判断表单控件是否通过验证？","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何判断表单控件是否通过验证？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 Angular 中，我们可以通过 "),s("code",[this._v('#userName="ngModel"')]),this._v(" 方式获取 "),s("code",[this._v("ngModel")]),this._v(" 对象，然后通过 "),s("code",[this._v("userName.valid")]),this._v("  判断表单控件是否通过验证。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),n("span",{attrs:{class:"token function"}},[t._v("Component")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  selector"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'app-root'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n    <input \n     type="text" \n     required\n     [(ngModel)]="username"\n     #userName="ngModel">\n    {{userName.valid}}\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  username "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'semlinker'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第三节-显示验证失败的错误信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三节-显示验证失败的错误信息","aria-hidden":"true"}},[this._v("#")]),this._v(" 第三节 - 显示验证失败的错误信息")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"如何显示验证失败的错误信息？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何显示验证失败的错误信息？","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何显示验证失败的错误信息？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 Angular 中，我们可以通过 "),s("code",[this._v('#userName="ngModel"')]),this._v(" 方式获取 "),s("code",[this._v("ngModel")]),this._v(" 对象，然后通过该对象的 "),s("code",[this._v("errors")]),this._v(" 属性，来获取对应验证规则 (如 required, minlength 等) 的验证状态。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),n("span",{attrs:{class:"token function"}},[t._v("Component")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  selector"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'app-root'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n    <input \n     type="text" \n     required\n     minlength="3"\n     [(ngModel)]="username"\n     #userName="ngModel">\n\t<hr>\n    <div *ngIf="userName.errors?.required">请您输入用户名</div>\n    <div *ngIf="userName.errors?.minlength">\n      用户名的长度必须大于 {{userName.errors?.minlength.requiredLength}}，当前的长度为\n    \t{{userName.errors?.minlength.actualLength}}\n    </div>\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  username "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'semlinker'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第四节-创建表单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四节-创建表单","aria-hidden":"true"}},[this._v("#")]),this._v(" 第四节 - 创建表单")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"如何使用表单？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何使用表单？","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何使用表单？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 Angular 中，我们可以使用熟悉的 "),s("code",[this._v("<form>")]),this._v(" 标签来创建表单。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),n("span",{attrs:{class:"token function"}},[t._v("Component")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  selector"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'app-root'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n  <form>\n    <input \n     type="text" \n     required\n     minlength="3"\n     name="username"\n     [(ngModel)]="username"\n     #userName="ngModel">\n    <hr>\n    <div *ngIf="userName.errors?.required">请您输入用户名</div>\n    <div *ngIf="userName.errors?.minlength">\n      用户名的长度必须大于 {{userName.errors?.minlength.requiredLength}}，当前的长度为\n    \t{{userName.errors?.minlength.actualLength}}\n    </div>\n    <button type="submit">提交</button>\n  </form>\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  username "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'semlinker'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("需要注意的是，在使用 "),s("code",[this._v("<form>")]),this._v(" 标签后，我们的 "),s("code",[this._v("username")]),this._v(" 输入框，必须添加 "),s("code",[this._v("name")]),this._v(" 属性。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"如何获取表单提交的值？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何获取表单提交的值？","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何获取表单提交的值？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 Angular 中，我们可以通过 "),s("code",[this._v('#loginForm="ngForm"')]),this._v(" 方式获取 "),s("code",[this._v("ngForm")]),this._v(" 对象，然后通过 "),s("code",[this._v("loginForm.value")]),this._v(" 来获取表单的值。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),n("span",{attrs:{class:"token function"}},[t._v("Component")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  selector"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'app-root'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n  <form #loginForm="ngForm" (ngSubmit)="onSubmit(loginForm.value)">\n    <input \n     type="text" \n     required\n     minlength="3"\n     name="username"\n     [(ngModel)]="username"\n     #userName="ngModel">\n    <hr>\n    <div *ngIf="userName.errors?.required">请您输入用户名</div>\n    <div *ngIf="userName.errors?.minlength">\n      用户名的长度必须大于 {{userName.errors?.minlength.requiredLength}}，当前的长度为\n    \t{{userName.errors?.minlength.actualLength}}\n    </div>\n    <button type="submit">提交</button>\n  </form>\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  username "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'semlinker'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{attrs:{class:"token function"}},[t._v("onSubmit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token builtin"}},[t._v("console")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("dir")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第五节-ngmodelgroup简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第五节-ngmodelgroup简介","aria-hidden":"true"}},[this._v("#")]),this._v(" 第五节 - ngModelGroup简介")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"ngmodelgroup-有什么作用？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ngmodelgroup-有什么作用？","aria-hidden":"true"}},[this._v("#")]),this._v(" ngModelGroup 有什么作用？")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),n("span",{attrs:{class:"token function"}},[t._v("Component")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  selector"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'app-root'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n  <form #loginForm="ngForm" (ngSubmit)="onSubmit(loginForm.value)">\n   <fieldset ngModelGroup="user">\n    <input \n     type="text" \n     required\n     minlength="3"\n     name="username"\n     [(ngModel)]="username"\n     #userName="ngModel">\n    <hr>\n    <div *ngIf="userName.errors?.required">请您输入用户名</div>\n    <div *ngIf="userName.errors?.minlength">\n      用户名的长度必须大于 {{userName.errors?.minlength.requiredLength}}，当前的长度为\n    \t{{userName.errors?.minlength.actualLength}}\n    </div>\n    <input type="password" ngModel name="password">\n   </fieldset>\n    <button type="submit">提交</button>\n    <hr>\n  </form>\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  username "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'semlinker'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{attrs:{class:"token function"}},[t._v("onSubmit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token builtin"}},[t._v("console")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("dir")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"user"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"username"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"semlinker"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token property"}},[t._v('"password"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"123"')]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第六节-表单添加验证状态样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第六节-表单添加验证状态样式","aria-hidden":"true"}},[this._v("#")]),this._v(" 第六节 - 表单添加验证状态样式")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"如何为表单添加验证状态样式信息？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何为表单添加验证状态样式信息？","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何为表单添加验证状态样式信息？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 Angular 表单中，若验证通过则会在表单控件上添加 "),s("code",[this._v("ng-valid")]),this._v(" 类，若验证失败则会在表单控件上添加 "),s("code",[this._v("ng-invalid")]),this._v(" 类。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),n("span",{attrs:{class:"token function"}},[t._v("Component")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  selector"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'app-root'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  styles"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`\n   input.ng-invalid {\n       border: 3px solid red;\n    }\n   input.ng-valid {\n       border: 3px solid green;\n    }\n  `")])]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n  <form #loginForm="ngForm" (ngSubmit)="onSubmit(loginForm.value)">\n   <fieldset ngModelGroup="user">\n    <input \n     type="text" \n     required\n     minlength="3"\n     name="username"\n     [(ngModel)]="username"\n     #userName="ngModel">\n    <hr>\n    <div *ngIf="userName.errors?.required">请您输入用户名</div>\n    <div *ngIf="userName.errors?.minlength">\n      用户名的长度必须大于 {{userName.errors?.minlength.requiredLength}}，当前的长度为\n    \t{{userName.errors?.minlength.actualLength}}\n    </div>\n    <input type="password" required ngModel name="password">\n   </fieldset>\n    <button type="submit">提交</button>\n  </form>\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  username "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'semlinker'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{attrs:{class:"token function"}},[t._v("onSubmit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token builtin"}},[t._v("console")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("dir")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第七节-表单控件的状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第七节-表单控件的状态","aria-hidden":"true"}},[this._v("#")]),this._v(" 第七节 - 表单控件的状态")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"表单控件除了-valid-状态外，还包含哪些状态？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表单控件除了-valid-状态外，还包含哪些状态？","aria-hidden":"true"}},[this._v("#")]),this._v(" 表单控件除了 "),s("code",[this._v("valid")]),this._v(" 状态外，还包含哪些状态？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 Angular 中表单控件有以下状态，我们可以通过 "),s("code",[this._v('#userName="ngModel"')]),this._v(" 方式获取 "),s("code",[this._v("ngModel")]),this._v(" 对象，进而获取控件的状态信息。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("valid - 表单控件有效")]),t._v(" "),n("li",[t._v("invalid - 表单控件无效")]),t._v(" "),n("li",[t._v("pristine - 表单控件值未改变")]),t._v(" "),n("li",[t._v("dirty - 表单控件值已改变")]),t._v(" "),n("li",[t._v("touched - 表单控件已被访问过")]),t._v(" "),n("li",[t._v("untouched - 表单控件未被访问过")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),n("span",{attrs:{class:"token function"}},[t._v("Component")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  selector"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'app-root'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  styles"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`\n   input.ng-invalid {\n       border: 3px solid red;\n    }\n   input.ng-valid {\n       border: 3px solid green;\n    }\n  `")])]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n  <form #loginForm="ngForm" (ngSubmit)="onSubmit(loginForm.value)">\n   <fieldset ngModelGroup="user">\n    <input \n     type="text" \n     required\n     minlength="3"\n     name="username"\n     [(ngModel)]="username"\n     #userName="ngModel">\n    <hr>\n    <p>Name控件的valid状态：{{userName.valid}} - 表示控件有效</p>\n    <p>Name控件的invalid状态：{{userName.invalid}} - 表示控件无效</p>\n    <p>Name控件的pristine状态：{{userName.pristine}} - 表示控件值未改变</p>\n    <p>Name控件的dirty状态：{{userName.dirty}} - 表示控件值已改变</p>\n    <p>Name控件的touched状态：{{userName.touched}} - 表示控件已被访问过</p>\n    <p>Name控件的untouched状态：{{userName.untouched}} - 表示控件未被访问过</p>\n    <div *ngIf="userName.errors?.required">请您输入用户名</div>\n    <div *ngIf="userName.errors?.minlength">\n      用户名的长度必须大于 {{userName.errors?.minlength.requiredLength}}，当前的长度为\n    \t{{userName.errors?.minlength.actualLength}}\n    </div>\n    <input type="password" required ngModel name="password">\n   </fieldset>\n    <button type="submit">提交</button>\n  </form>\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  username "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'semlinker'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{attrs:{class:"token function"}},[t._v("onSubmit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token builtin"}},[t._v("console")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("dir")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第八节-使用单选控件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第八节-使用单选控件","aria-hidden":"true"}},[this._v("#")]),this._v(" 第八节 - 使用单选控件")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"如何添加单选控件？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何添加单选控件？","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何添加单选控件？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 Angular 中，我们通过 "),s("code",[this._v('<input name="***" type="radio">')]),this._v(" 方式添加单选控件。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),n("span",{attrs:{class:"token function"}},[t._v("Component")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  selector"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'app-root'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n  <form #loginForm="ngForm">\n    Angular版本：\n    <div *ngFor="let version of versions;">\n        <input \n          [attr.id]="version"\n           name="version"\n           ngModel\n           required\n    \t   [value]="version"\n\t\t    type="radio">\n\t\t <label [attr.for]="version">{{version}}</label>\n\t  </div>\n  </form>\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  versions "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token string"}},[t._v("'1.x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'2.x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'3.x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第九节-使用多选控件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第九节-使用多选控件","aria-hidden":"true"}},[this._v("#")]),this._v(" 第九节 - 使用多选控件")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"如何添加多选控件？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何添加多选控件？","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何添加多选控件？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 Angular 中，我们通过 "),s("code",[this._v('<select name="***">')]),this._v(" 方式添加多选控件。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),n("span",{attrs:{class:"token function"}},[t._v("Component")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  selector"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'app-root'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n  <form #loginForm="ngForm">\n    Angular版本：\n    <select name="version" [ngModel]="versions[0]">\n\t  \t<option\n\t  \t *ngFor="let version of versions;"\n\t  \t  [value]="version">\n\t  \t\t{{version}}\n\t    </option>\n\t  </select>\n  </form>\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  versions "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token string"}},[t._v("'1.x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'2.x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'3.x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"如何添加必填验证？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何添加必填验证？","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何添加必填验证？")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),n("span",{attrs:{class:"token function"}},[t._v("Component")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  selector"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'app-root'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  styles"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`\n   select.ng-invalid + label:after {\n      content: '<-- 请选择版本!'\n    }\n  `")])]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  template"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n  <form #loginForm="ngForm">\n    Angular版本：\n    <div>\n      <select name="version" [ngModel]="version" required>\n        <option\n        *ngFor="let version of versions;"\n          [value]="version">\n          {{version}}\n        </option>\n      </select>\n      <label></label>\n    </div>\n  </form>\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  versions "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token string"}},[t._v("''")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{attrs:{class:"token string"}},[t._v("'1.x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'2.x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'4.x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'6.x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])}],!1,null,null,null);e.options.__file="ng-form-quickstart.md";s.default=e.exports}}]);